{"version":3,"sources":["pd-pager.ts"],"names":[],"mappings":"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","file":"pd-pager.js","sourcesContent":["import {ILogger} from './ilogger';\r\nimport {Page} from './page';\r\nimport {PagerTemplates} from './pager-templates';\r\nimport {PdPagerOptions} from './pd-pager-options';\r\n\r\nexport class PdPager {\r\n    private currentPage: number;\r\n    private id: string;\r\n    private firstPage: number;\r\n    private maximumNumberOfExplicitPagesToDisplay: number;\r\n    private totalPages: number;\r\n    private canPageBackward: boolean;\r\n    private canPageForward: boolean;\r\n    private hasMorePagesBackward: boolean;\r\n    private hasMorePagesForward: boolean;\r\n    private pagesRange: Page[];\r\n    private convertFromDecimal: (decimalNumeralRepresentation: number) => any;\r\n    private convertToDecimal: (alternativeNumeralRepresentation: any) => number;\r\n    private input: HTMLInputElement;\r\n\r\n    public constructor(options?: PdPagerOptions, parentElement?: Element, private logger?: ILogger) {\r\n       parentElement = parentElement || document.body;\r\n       this.logger = this.logger || console;\r\n       options = new PdPagerOptions(options);\r\n\r\n       this.logger.debug('constructor');\r\n       let firstPage = options.convertFromDecimal(options.firstPage);\r\n       this.currentPage = firstPage;\r\n       this.buildSettings(options);\r\n       let pagerHtml = this.buildPager(options);\r\n       parentElement.appendChild(pagerHtml);\r\n    }\r\n\r\n    public pageToEnd(): void {\r\n        this.logger.debug('pageToEnd');\r\n        this.pageTo(this.totalPages);\r\n    }\r\n\r\n    public pageToBeginning(): void {\r\n        this.logger.debug('pageToBeginning');\r\n        this.pageTo(this.firstPage);\r\n    }\r\n\r\n    public retreat(): void {\r\n        this.logger.debug('retreat');\r\n        if (this.canPageBackward) {\r\n            this.pageTo(this.currentPage - 1);\r\n        }\r\n    }\r\n\r\n    public advance(): void {\r\n        this.logger.debug('advance');\r\n        if (this.currentPage < this.totalPages) {\r\n            this.pageTo(this.currentPage + 1);\r\n        }\r\n    }\r\n\r\n    public pageTo(pageIndex: number): void {\r\n        this.logger.debug('pageTo(' + pageIndex + ')');\r\n        if (pageIndex > 0 && pageIndex <= this.totalPages) {\r\n            this.displayPageInput = this.convertFromDecimal(pageIndex);\r\n    //            this.updateState();\r\n        }\r\n    }\r\n\r\n    public updateCurrentPage() {\r\n        this.logger.debug('updateCurrentPage');\r\n        let isValidPageInput = this.pageInputIsValid();\r\n\r\n        if (isValidPageInput) {\r\n            this.pageTo(this.convertToDecimal.call(this, this.displayPageInput));\r\n        }\r\n    }\r\n\r\n    public pageInputIsValid(): boolean {\r\n        this.logger.debug('pageInputIsValid');\r\n        let pageInput = this.convertToDecimal(this.displayPageInput);\r\n\r\n        return pageInput && !isNaN(pageInput) && pageInput >= 1 && pageInput <= this.totalPages;\r\n    }\r\n\r\n    private get displayPageInput(): number {\r\n        return parseInt(this.input.value, 10);\r\n    }\r\n\r\n    private set displayPageInput(value: number) {\r\n        if (this.input) {\r\n            this.input.value = value.toString();\r\n        }\r\n    }\r\n\r\n    private buildSettings(options: PdPagerOptions): void {\r\n        this.logger.debug('buildSettings');\r\n        this.id = options.id;\r\n        this.convertFromDecimal = options.convertFromDecimal.bind(this);\r\n        this.convertToDecimal = options.convertToDecimal.bind(this);\r\n        this.firstPage = options.convertFromDecimal(options.firstPage);\r\n        this.maximumNumberOfExplicitPagesToDisplay = options.maximumNumberOfExplicitPagesToDisplay;\r\n        this.totalPages = options.convertFromDecimal(options.totalPages);\r\n\r\n        this.canPageBackward = this.currentPage > this.firstPage;\r\n        this.canPageForward = this.currentPage < this.totalPages;\r\n\r\n        this.hasMorePagesBackward = false;\r\n        this.hasMorePagesForward = false;\r\n\r\n        if (this.currentPage > this.firstPage + 2\r\n            && this.totalPages > this.maximumNumberOfExplicitPagesToDisplay) {\r\n            this.hasMorePagesBackward = true;\r\n        }\r\n\r\n        if (this.currentPage < this.totalPages - 2\r\n            && this.totalPages > this.maximumNumberOfExplicitPagesToDisplay) {\r\n            this.hasMorePagesForward = true;\r\n        }\r\n\r\n        let rangeStart;\r\n        let rangeEnd;\r\n        if (!this.hasMorePagesBackward && !this.hasMorePagesForward) {\r\n            rangeStart = this.firstPage + 1;\r\n            rangeEnd = this.totalPages;\r\n        } else if (!this.hasMorePagesBackward) {\r\n            rangeStart = this.firstPage + 1;\r\n            rangeEnd = this.maximumNumberOfExplicitPagesToDisplay - 1;\r\n        } else if (!this.hasMorePagesForward) {\r\n            rangeEnd = this.totalPages;\r\n            rangeStart = this.totalPages - this.maximumNumberOfExplicitPagesToDisplay + 3;\r\n        } else {\r\n            let hasOddNumberOfButtons = (this.maximumNumberOfExplicitPagesToDisplay % 2) === 1;\r\n            let x = Math.ceil((this.maximumNumberOfExplicitPagesToDisplay - 5) / 2);\r\n\r\n            if (this.currentPage + x === this.totalPages - 2) {\r\n                this.hasMorePagesForward = false;\r\n                rangeStart = this.currentPage - x;\r\n                rangeEnd = this.totalPages;\r\n            } else {\r\n                if (hasOddNumberOfButtons) {\r\n                    rangeStart = this.currentPage - x;\r\n                    rangeEnd = this.currentPage + x + 1;\r\n                } else {\r\n                    rangeStart = this.currentPage - x + 1;\r\n                    rangeEnd = this.currentPage + x + 1;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.pagesRange = [];\r\n        for (; rangeStart < rangeEnd; rangeStart++) {\r\n            this.pagesRange.push({displayPage: options.convertFromDecimal(rangeStart), page: rangeStart });\r\n        }\r\n    }\r\n\r\n    private buildPager(options: PdPagerOptions): HTMLDivElement {\r\n        let templates = new PagerTemplates();\r\n        let beginningPagerButtons: HTMLElement[] = [];\r\n        let endingPagerButtons: HTMLElement[] = [];\r\n\r\n        if (options.enableFirstLastPageArrows) {\r\n            beginningPagerButtons.push(this.buildButton(templates.pageToBeginningHtml, 'arrow-page-to-beginning', !this.canPageBackward, this.pageToBeginning.bind(this)));\r\n            endingPagerButtons.unshift(this.buildButton(templates.pageToEndHtml, 'arrow-page-to-end', !this.canPageForward, this.pageToEnd.bind(this)));\r\n        }\r\n\r\n        if (options.enablePageArrows) {\r\n            beginningPagerButtons.push(this.buildButton(templates.pageRetreatHtml, 'arrow-page-retreat', !this.canPageBackward, this.retreat.bind(this)));\r\n            endingPagerButtons.unshift(this.buildButton(templates.pageAdvanceHtml, 'arrow-page-advance', !this.canPageForward, this.advance.bind(this)));\r\n        }\r\n\r\n        if (options.hasMultiplePages) {\r\n            let content = templates.pageToFirstHtml.replace(PagerTemplates.PAGE_TO_FIRST_PLACEHOLDER, this.firstPage.toString());\r\n            beginningPagerButtons.push(this.buildButton(content, 'page-to-beginning', !this.canPageBackward, this.pageToBeginning.bind(this)));\r\n\r\n            content = templates.pageToLastHtml.replace(PagerTemplates.PAGE_TO_LAST_PLACEHOLDER, this.totalPages.toString());\r\n            endingPagerButtons.unshift(this.buildButton(content, 'arrow-page-end', !this.canPageForward, this.pageToEnd.bind(this)));\r\n        }\r\n\r\n        if (this.hasMorePagesBackward) {\r\n            beginningPagerButtons.push(this.buildButton(templates.pageFillerBeforeHtml, 'page-filler-before'));\r\n        }\r\n\r\n        if (this.hasMorePagesForward) {\r\n            endingPagerButtons.unshift(this.buildButton(templates.pageFillerAfterHtml, 'page-filler-after'));\r\n        }\r\n\r\n        this.pagesRange\r\n                .forEach(pageRange => {\r\n                    let content = templates.pageRangeHtml.replace('${pageRange.displayPage}', pageRange.displayPage);\r\n                    beginningPagerButtons.push(this.buildButton(content, `page-${pageRange.page}`, this.currentPage === pageRange.page, this.pageTo.bind(this, pageRange.page)));\r\n                });\r\n\r\n        if (options.enablePageInput) {\r\n            let input = document.createElement('input');\r\n            input.id = `page-input-${this.id}`;\r\n            input.value = this.currentPage.toString();\r\n            input.blur = this.updateCurrentPage;\r\n            this.input = input;\r\n            endingPagerButtons.push(input);\r\n        }\r\n\r\n        let element = document.createElement('div');\r\n        element.id = `pager-container${this.id}`;\r\n\r\n        beginningPagerButtons\r\n            .concat(endingPagerButtons)\r\n            .forEach(button => {\r\n                element.appendChild(button);\r\n            });\r\n\r\n        return element;\r\n    }\r\n\r\n    private buildButton(content: string, elementId: string, buttonIsDisabled: boolean = true, onclickAction: () => void = null): HTMLButtonElement {\r\n        let button = document.createElement('button');\r\n        button.id = elementId;\r\n\r\n        if (buttonIsDisabled) {\r\n            button.disabled = true;\r\n        }\r\n\r\n        if (onclickAction) {\r\n            button.addEventListener('click', onclickAction, false);\r\n        }\r\n\r\n        button.innerHTML = content;\r\n        return button;\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}